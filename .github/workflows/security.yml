name: 🔒 Security Scanning

on:
  schedule:
    - cron: '0 6 * * *'  # Daily at 6 AM UTC
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dependency-scan:
    name: 📦 Dependency Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: 🔍 OWASP Dependency Check
      working-directory: ./api
      run: |
        ./mvnw org.owasp:dependency-check-maven:check \
          -DfailBuildOnCVSS=7 \
          -DskipTestScope=true

    - name: 📈 Upload OWASP results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: owasp-dependency-check
        path: api/target/dependency-check-report.html

    - name: 🟢 Node.js Security Audit
      working-directory: ./dashboard
      run: |
        npm audit --audit-level=high

  secret-scan:
    name: 🔐 Secret Scanning
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔍 Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  container-scan:
    name: 🐳 Container Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🏗️ Build Docker images
      run: |
        docker build -t kriir-api:scan ./api
        docker build -t kriir-dashboard:scan ./dashboard

    - name: 🛡️ Scan API container
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'kriir-api:scan'
        format: 'sarif'
        output: 'api-trivy-results.sarif'

    - name: 🛡️ Scan Dashboard container
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'kriir-dashboard:scan'
        format: 'sarif'
        output: 'dashboard-trivy-results.sarif'

    - name: 📈 Upload API scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'api-trivy-results.sarif'
        category: 'api-container'

    - name: 📈 Upload Dashboard scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'dashboard-trivy-results.sarif'
        category: 'dashboard-container'

  sast-scan:
    name: 🔬 Static Application Security Testing
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔍 Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: java, javascript
        queries: security-extended

    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: 🏗️ Build Java application
      working-directory: ./api
      run: ./mvnw clean compile -DskipTests

    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  license-scan:
    name: ⚖️ License Compliance Scan
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: 🔍 License check (Maven)
      working-directory: ./api
      run: |
        ./mvnw license:check

    - name: 🟢 Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './dashboard/package-lock.json'

    - name: 🔍 License check (npm)
      working-directory: ./dashboard
      run: |
        npm install -g license-checker
        license-checker --production --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC'

  security-report:
    name: 📊 Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, secret-scan, container-scan, sast-scan, license-scan]
    if: always()

    steps:
    - name: 📊 Generate Security Summary
      run: |
        echo "## 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Scan Type | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Dependency Scan | ${{ needs.dependency-scan.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Secret Scan | ${{ needs.secret-scan.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Container Scan | ${{ needs.container-scan.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| SAST Scan | ${{ needs.sast-scan.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| License Scan | ${{ needs.license-scan.result }} |" >> $GITHUB_STEP_SUMMARY