version: '3.8'

services:
  postgis:
    container_name: cyberisk-postgis
    image: postgis/postgis:15-3.4-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: kriir_db
      POSTGRES_USER: kriir
      POSTGRES_PASSWORD: kriir
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgis_data:/var/lib/postgresql/data
      - ./api/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./api/src/main/resources/function_notify_event.sql:/docker-entrypoint-initdb.d/02-functions.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kriir -d kriir_db"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - cyberisk-network

  api:
    container_name: cyberisk-api
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        - BUILD_DATE=${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        - VCS_REF=${VCS_REF:-$(git rev-parse --short HEAD)}
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgis:5432/kriir_db
      - SPRING_DATASOURCE_USERNAME=kriir
      - SPRING_DATASOURCE_PASSWORD=kriir
      - JAVA_OPTS=-Xmx512m -Xms256m
    depends_on:
      postgis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - cyberisk-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.services.api.loadbalancer.server.port=8080"

  dashboard:
    container_name: cyberisk-dashboard
    build:
      context: ./dashboard
      dockerfile: Dockerfile
      args:
        - BUILD_DATE=${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        - VCS_REF=${VCS_REF:-$(git rev-parse --short HEAD)}
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - cyberisk-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=PathPrefix(`/`)"
      - "traefik.http.services.dashboard.loadbalancer.server.port=3000"

volumes:
  postgis_data:
    driver: local

networks:
  cyberisk-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16


