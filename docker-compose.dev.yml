version: '3.8'

services:
  postgis:
    container_name: cyberisk-postgis-dev
    image: postgis/postgis:15-3.4-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: cop_db
      POSTGRES_USER: cop
      POSTGRES_PASSWORD: cop
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgis_dev_data:/var/lib/postgresql/data
      - ./api/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./api/src/main/resources/function_notify_event.sql:/docker-entrypoint-initdb.d/02-functions.sql
    networks:
      - cyberisk-network

  api:
    container_name: cyberisk-api-dev
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "5005:5005"  # Debug port
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgis:5432/cop_db
      - SPRING_DATASOURCE_USERNAME=cop
      - SPRING_DATASOURCE_PASSWORD=cop
      - JAVA_OPTS=-Xmx512m -Xms256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - SPRING_DEVTOOLS_RESTART_ENABLED=true
    depends_on:
      - postgis
    volumes:
      - ./api/src:/app/src
      - ./api/target:/app/target
      - maven_cache:/root/.m2
    networks:
      - cyberisk-network

  dashboard:
    container_name: cyberisk-dashboard-dev
    build:
      context: ./dashboard
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:8080
    volumes:
      - ./dashboard/src:/app/src
      - ./dashboard/public:/app/public
      - node_modules:/app/node_modules
    networks:
      - cyberisk-network

volumes:
  postgis_dev_data:
    driver: local
  maven_cache:
    driver: local
  node_modules:
    driver: local

networks:
  cyberisk-network:
    driver: bridge